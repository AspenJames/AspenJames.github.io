{"version":3,"sources":["components/NavBar.js","components/ContainerRight.js","components/TextRight.js","pages/About.js","pages/Home.js","pages/Particles.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","drawerWidth","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","NavBar","props","classes","state","open","setOpen","darkModeState","isDarkMode","setDarkMode","handleDrawerClose","ListItemLink","icon","primary","to","external","renderLink","useMemo","forwardRef","itemProps","ref","component","href","ListItem","button","onClick","ListItemIcon","ListItemText","drawerContents","className","IconButton","Divider","List","FormControlLabel","control","Switch","checked","color","onChange","ev","target","localStorage","setItem","label","AppBar","position","clsx","Toolbar","aria-label","edge","Typography","variant","noWrap","Drawer","anchor","paper","ContainerRight","c","containerRight","float","Container","LowerTextRight","val","rest","isMobile","useMediaQuery","breakpoints","down","mobileVariantMap","align","Object","keys","includes","About","containerWidth","maxWidth","Link","Home","NavLink","_","canvas","margin","top","left","Particles","useEffect","go","window","Go","WebAssembly","instantiateStreaming","fetch","headers","Accept","importObject","then","result","run","instance","id","Routes","path","root","content","flexGrow","contentShift","App","darkModeInitial","getItem","prefersDarkMode","useState","createMuiTheme","palette","type","light","main","dark","contrastText","secondary","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"waAyBMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,WAAYF,EAAMG,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,MAAM,eAAD,OAAiBV,EAAMW,YAAvB,OACLC,WAAYZ,EAAMW,YAClBT,WAAYF,EAAMG,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQL,EAAMG,YAAYE,OAAOQ,QACjCN,SAAUP,EAAMG,YAAYI,SAASO,kBAGzCC,WAAY,CACVC,YAAahB,EAAMiB,QAAQ,IAE7BC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNV,MAAOV,EAAMW,YACbU,WAAY,GAEdC,YAAa,CACXZ,MAAOV,EAAMW,aAEfY,aAAa,yBACXJ,QAAS,OACTK,WAAY,SACZC,QAASzB,EAAMiB,QAAQ,EAAG,IAEvBjB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,iBA2GLC,MAtGf,SAAgBC,GACd,IAAMC,EAAUjC,IADK,cAEGgC,EAAME,MAFT,GAEdC,EAFc,KAERC,EAFQ,mBAGaJ,EAAMK,cAHnB,GAGdC,EAHc,KAGFC,EAHE,KAMfC,EAAoB,kBAAMJ,GAAQ,IAQlCK,EAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACnCC,EAAaC,mBACjB,kBAAMC,sBAAW,SAACC,EAAWC,GAAZ,OAAoB,cAAC,IAAD,aAAYN,GAAIA,EAAIM,IAAKA,GAASD,SACvE,CAACL,IAGGO,EAAYN,EAAW,IAAMC,EAC7BM,EAAOP,EAAW,CAAE,KAAQD,GAAO,GAEzC,OACE,6BACE,eAACS,EAAA,EAAD,yBAAUC,QAAM,EAACH,UAAWA,EAAWI,QAASf,GAAuBY,GAAvE,cACGV,EAAO,cAACc,EAAA,EAAD,UAAed,IAAuB,KAC7CC,EAAU,cAACc,EAAA,EAAD,CAAcd,QAASA,IAAc,YAMlDe,EACJ,qCACE,qBAAKC,UAAW1B,EAAQR,aAAxB,SACE,cAACmC,EAAA,EAAD,CAAYL,QAASf,EAArB,SACE,cAAC,IAAD,QAGJ,cAACqB,EAAA,EAAD,IAEA,eAACC,EAAA,EAAD,WACE,cAACrB,EAAD,CAAcG,GAAG,IAAID,QAAQ,SAC7B,cAACF,EAAD,CAAcG,GAAG,SAASD,QAAQ,aAEpC,cAACkB,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,UACE,cAACrB,EAAD,CAAcG,GAAG,qDAAqDF,KAAM,cAAC,IAAD,IAAgBC,QAAQ,SAASE,SAAS,WAExH,cAACgB,EAAA,EAAD,IAEA,cAACE,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAS5B,EACT6B,MAAM,YACNC,SA9CgB,SAACC,GAAD,OAAuBA,EAAGC,OAAOJ,QAJzDK,aAAaC,QAAQ,YAAalC,QAClCC,GAAaD,MAoDTmC,MAAM,iBAKZ,OACE,qCACE,cAACC,EAAA,EAAD,CACEC,SAAS,QACThB,UAAWiB,YAAK3C,EAAQ9B,OAAT,eACZ8B,EAAQtB,YAAcwB,IAH3B,SAME,eAAC0C,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,CACEO,MAAM,UACNW,aAAW,cACXvB,QAzEe,kBAAMnB,GAAQ,IA0E7B2C,KAAK,QACLpB,UAAWiB,YAAK3C,EAAQhB,WAAYkB,GAAQF,EAAQb,MALtD,SAOE,cAAC,IAAD,MAEF,cAAC4D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,EAA/B,iCAKJ,cAACC,EAAA,EAAD,CACExB,UAAW1B,EAAQX,OACnB2D,QAAQ,aACRG,OAAO,OACPjD,KAAMA,EACNF,QAAS,CACPoD,MAAOpD,EAAQT,aANnB,SAQEkC,Q,0BC7JO,SAAS4B,EAAetD,GACrC,IAAMuD,EAAItF,aAAW,SAAAC,GAAK,MAAK,CAC7BsF,eAAgB,CACdC,MAAO,YAFDxF,GAKV,OACE,cAACyF,EAAA,EAAD,aAAW/B,UAAW4B,EAAEC,gBAAoBxD,I,YCPjC,SAAS2D,EAAT,GAA+C,IASzCC,EAToBX,EAAoB,EAApBA,QAAYY,EAAQ,2BACrDC,EAAWC,aAAc,SAAA7F,GAAK,OAAIA,EAAM8F,YAAYC,KAAK,SACzDC,EAAmB,CACvB,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,KACN,GAAM,MASR,OACE,cAAClB,EAAA,EAAD,aAAYmB,MAAM,QAAQlB,SARTW,EAQ6BX,EAP1Ca,GAAYM,OAAOC,KAAKH,GAAkBI,SAASV,GAC9CM,EAAiBN,GAEnBA,IAIqDC,ICQjDU,MAvBf,WACE,IACMC,EADWT,aAAc,SAAA7F,GAAK,OAAIA,EAAM8F,YAAYC,KAAK,SAC7B,KAAO,KACzC,OACE,eAACX,EAAD,CAAgBmB,SAAUD,EAA1B,UACE,cAAC,EAAD,CAAWvB,QAAQ,KAAKd,MAAM,UAA9B,+BAGA,eAAC,EAAD,CAAWc,QAAQ,KAAK9B,UAAU,IAAIgB,MAAM,cAA5C,yNAG+D,cAACuC,EAAA,EAAD,CAC3DtD,KAAK,wCADsD,qEAH/D,0DAMuB,cAACsD,EAAA,EAAD,CAAMtD,KAAK,oCAAX,sBANvB,qLCaSuD,MApBf,WACE,OACE,eAACrB,EAAD,CAAgBmB,SAAS,KAAzB,UACE,cAAC,EAAD,CAAWxB,QAAQ,KAAKd,MAAM,UAA9B,oBAIA,cAAC,EAAD,CAAWc,QAAQ,KAAK9B,UAAU,KAAKgB,MAAM,YAA7C,+BAGA,cAAC,EAAD,CAAWc,QAAQ,KAAKd,MAAM,gBAA9B,8BAGA,cAAC,EAAD,CAAWc,QAAQ,KAAKd,MAAM,gBAA9B,SACE,cAACuC,EAAA,EAAD,CAAMvD,UAAWyD,IAAShE,GAAG,SAA7B,sCClBF5C,EAAYC,aAAW,SAAC4G,GAAD,MAAQ,CACnCC,OAAQ,CACNC,OAAQ,EACRpF,QAAS,EACTgD,SAAU,WACVqC,IAAK,EACLC,KAAM,OAoBKC,MAhBf,WACEC,qBAAU,WACR,IAAMC,EAAK,IAAIC,OAAOC,GACtBD,OAAOE,YAAYC,qBACjBC,MAAM,qBAAsB,CAC1BC,QAAS,CAAEC,OAAQ,sBAErBP,EAAGQ,cACHC,MAAK,SAACC,GACNV,EAAGW,IAAID,EAAOE,eAEf,IACH,IAAM/F,EAAUjC,IAChB,OAAO,wBAAQiI,GAAG,SAAStE,UAAW1B,EAAQ6E,UCFjCoB,MAhBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,UCDFnI,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkI,KAAM,CACJ/G,QAAS,QAEXI,aAAa,yBACXJ,QAAS,OACTK,WAAY,SACZC,QAASzB,EAAMiB,QAAQ,EAAG,IAEvBjB,EAAM0B,OAAOC,SALN,IAMVC,eAAgB,aAElBuG,QAAS,CACPC,SAAU,EACV3G,QAASzB,EAAMiB,QAAQ,GACvBf,WAAYF,EAAMG,YAAYC,OAAO,SAAU,CAC7CC,OAAQL,EAAMG,YAAYE,OAAOC,MACjCC,SAAUP,EAAMG,YAAYI,SAASC,gBAEvCI,YArBgB,KAuBlByH,aAAc,CACZnI,WAAYF,EAAMG,YAAYC,OAAO,SAAU,CAC7CC,OAAQL,EAAMG,YAAYE,OAAOQ,QACjCN,SAAUP,EAAMG,YAAYI,SAASO,iBAEvCF,WAAY,OA2FD0H,MAvFf,WACE,IAAIC,EAAkBlE,aAAamE,QAAQ,YACrCC,EAAkB5C,YAAc,gCACd,OAApB0C,GACFA,EAAkBE,EAClBpE,aAAaC,QAAQ,WAAYiE,IAEjCA,EAAsC,UAApBA,EAPP,MASqBG,mBAASH,GAT9B,mBASNnG,EATM,KASMC,EATN,KAUPrC,EAAQ6C,mBACZ,WA6BE,OAAIT,EACKuG,YAAe,CACpBC,QAAQ,aACNC,KAAM,QA/BY,CACtBpG,QAAS,CACPqG,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,eAyBXN,YAAe,CACpBC,QAAQ,aACNC,KAAM,SAxBe,CACvBpG,QAAS,CACPqG,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,iBAkBpB,CAAC7G,IAEHpC,EAAMW,YAzFY,IA2FlB,IAAMoB,EAAUjC,IA3DH,EA4DW4I,oBAAS,GA5DpB,mBA4DNzG,EA5DM,KA4DAC,EA5DA,KA8Db,OACE,cAACiH,EAAA,EAAD,CAAenJ,MAAOA,EAAtB,SACE,sBAAKyD,UAAW1B,EAAQmG,KAAxB,UACE,cAACkB,EAAA,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,CACEpH,MAAO,CAACC,EAAMC,GACdC,cAAe,CAACC,EAAYC,KAE9B,uBACEoB,UAAWiB,YAAK3C,EAAQoG,QAAT,eACZpG,EAAQsG,aAAepG,IAF5B,UAKE,qBAAKwB,UAAW1B,EAAQR,eAExB,cAAC,EAAD,gBCjHG8H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d50479d.chunk.js","sourcesContent":["import React, { forwardRef, useMemo } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n\nimport {\n  AppBar,\n  Divider,\n  Drawer,\n  FormControlLabel,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  Switch,\n  Toolbar,\n  Typography,\n} from '@material-ui/core';\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${theme.drawerWidth}px)`,\n    marginLeft: theme.drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: theme.drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: theme.drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n}))\n\n\nfunction NavBar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = props.state;\n  const [isDarkMode, setDarkMode] = props.darkModeState;\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n  const toggleDarkMode = () => {\n    localStorage.setItem('darkMode', !isDarkMode);\n    setDarkMode(!isDarkMode);\n  }\n\n  const handleSwitchInput = (ev) => toggleDarkMode(ev.target.checked);\n\n  const ListItemLink = ({ icon, primary, to, external }) => {\n    const renderLink = useMemo(\n      () => forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n      [to],\n    );\n\n    const component = external ? 'a' : renderLink;\n    const href = external ? { 'href': to } : {};\n\n    return (\n      <li>\n        <ListItem button component={component} onClick={handleDrawerClose} {...href}>\n          {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          {primary ? <ListItemText primary={primary} /> : null}\n        </ListItem>\n      </li>\n    )\n  }\n\n  const drawerContents = (\n    <>\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n\n      <List>\n        <ListItemLink to=\"/\" primary=\"Home\" />\n        <ListItemLink to=\"/about\" primary=\"About\" />\n      </List>\n      <Divider />\n\n      <List>\n        <ListItemLink to=\"https://github.com/aspenjames/aspenjames.github.io\" icon={<GitHubIcon />} primary=\"Github\" external=\"true\" />\n      </List>\n      <Divider />\n\n      <FormControlLabel\n        control={\n          <Switch\n            checked={isDarkMode}\n            color='secondary'\n            onChange={handleSwitchInput}\n          />\n        }\n        label=\"Dark mode\"\n      />\n    </>\n  );\n\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            aspenjames.dev\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >{drawerContents}</Drawer>\n    </>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\n\nimport { Container, makeStyles } from '@material-ui/core';\n\nexport default function ContainerRight(props) {\n  const c = makeStyles(theme => ({\n    containerRight: {\n      float: 'right',\n    },\n  }))();\n  return (\n    <Container className={c.containerRight} {...props} />\n  )\n}","import React from 'react';\n\nimport { Typography, useMediaQuery } from '@material-ui/core';\n\nexport default function LowerTextRight({ variant, ...rest }) {\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const mobileVariantMap = {\n    'h1': 'h2',\n    'h2': 'h3',\n    'h3': 'h4',\n    'h4': 'h5',\n    'h5': 'h6',\n  }\n  const getVariant = val => {\n    if (isMobile && Object.keys(mobileVariantMap).includes(val)) {\n      return mobileVariantMap[val];\n    }\n    return val\n  }\n\n  return (\n    <Typography align='right' variant={getVariant(variant)} {...rest} />\n  );\n}","import { Link, useMediaQuery } from '@material-ui/core';\nimport React from 'react';\n\nimport ContainerRight from '../components/ContainerRight';\nimport TextRight from '../components/TextRight';\n\nfunction About() {\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  const containerWidth = isMobile ? 'sm' : 'md';\n  return (\n    <ContainerRight maxWidth={containerWidth}>\n      <TextRight variant='h2' color='primary'>\n        Nice to meet you!\n      </TextRight>\n      <TextRight variant='h5' component='p' color='textPrimary'>\n        I'm a full stack engineer; I build web-based software products with a\n        focus on developer tooling and automation. I am a trans/non-binary queer\n        person, and I use they/them pronouns. I live and work on the <Link\n          href=\"https://www.duwamishtribe.org/history\">unceded territory of the\n          Dx&#695;d&#601;w&#660;ab&scaron;</Link>, and it's important to me that I\n        acknowledge this and <Link href=\"https://www.realrentduwamish.org/\">pay\n          rent</Link> to the original people of this land. When I'm not working, I\n        enjoy making and drinking coffee, film and Polaroid photography, and\n        generally being around trees and nature.\n      </TextRight>\n    </ContainerRight>\n  );\n}\n\nexport default About;\n","import { Link } from '@material-ui/core';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ContainerRight from '../components/ContainerRight';\nimport TextRight from '../components/TextRight';\n\nfunction Home() {\n  return (\n    <ContainerRight maxWidth='md'>\n      <TextRight variant=\"h1\" color=\"primary\">\n        hello!\n      </TextRight>\n\n      <TextRight variant=\"h3\" component=\"h2\" color=\"secondary\">\n        my name is aspen.\n      </TextRight>\n      <TextRight variant=\"h3\" color=\"textSecondary\">\n        i'm a developer.\n      </TextRight>\n      <TextRight variant=\"h3\" color=\"textSecondary\">\n        <Link component={NavLink} to=\"/about\">want to know more?</Link>\n      </TextRight>\n    </ContainerRight>\n  );\n}\n\nexport default Home;\n","import { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((_) => ({\n  canvas: {\n    margin: 0,\n    padding: 0,\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n}));\n\nfunction Particles() {\n  useEffect(() => {\n    const go = new window.Go();\n    window.WebAssembly.instantiateStreaming(\n      fetch(\"wasm/particle.wasm\", {\n        headers: { Accept: \"application/wasm\" },\n      }),\n      go.importObject\n    ).then((result) => {\n      go.run(result.instance);\n    });\n  }, []);\n  const classes = useStyles();\n  return <canvas id=\"canvas\" className={classes.canvas}></canvas>;\n}\n\nexport default Particles;\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport Particles from \"./pages/Particles\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/particles\">\n        <Particles />\n      </Route>\n      <Route path=\"/\">\n        <Home />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React, { useMemo, useState } from \"react\";\nimport { HashRouter as Router } from 'react-router-dom';\nimport clsx from \"clsx\";\n\nimport {\n  createMuiTheme,\n  CssBaseline,\n  makeStyles,\n  ThemeProvider,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\nimport NavBar from \"./components/NavBar\";\nimport Routes from './Routes';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction App() {\n  let darkModeInitial = localStorage.getItem('darkMode');\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  if (darkModeInitial === null) {\n    darkModeInitial = prefersDarkMode;\n    localStorage.setItem('darkMode', darkModeInitial)\n  } else {\n    darkModeInitial = darkModeInitial !== 'false';\n  }\n  const [isDarkMode, setDarkMode] = useState(darkModeInitial);\n  const theme = useMemo(\n    () => {\n      const darkThemeColors = {\n        primary: {\n          light: '#72FFFF',\n          main: '#00FFFF',\n          dark: '#00CBCC',\n          contrastText: '#000000',\n        },\n        secondary: {\n          light: '#FFD7FF',\n          main: '#FFA4FF',\n          dark: '#CB73CC',\n          contrastText: '#000000',\n        },\n      }\n      const lightThemeColors = {\n        primary: {\n          light: '#64FFFF',\n          main: '#00CCCC',\n          dark: '#009A9B',\n          contrastText: '#000000',\n        },\n        secondary: {\n          light: '#FFC1E3',\n          main: '#F48FB1',\n          dark: '#BF5F82',\n          contrastText: '#FFFFFF',\n        },\n      }\n      if (isDarkMode) {\n        return createMuiTheme({\n          palette: {\n            type: 'dark',\n            ...darkThemeColors,\n          }\n        })\n      }\n      return createMuiTheme({\n        palette: {\n          type: 'light',\n          ...lightThemeColors,\n        }\n      })\n    },\n    [isDarkMode]\n  )\n  theme.drawerWidth = drawerWidth;\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Router>\n          <NavBar\n            state={[open, setOpen]}\n            darkModeState={[isDarkMode, setDarkMode]}\n          />\n          <main\n            className={clsx(classes.content, {\n              [classes.contentShift]: open,\n            })}\n          >\n            <div className={classes.drawerHeader} />\n\n            <Routes />\n\n          </main>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}